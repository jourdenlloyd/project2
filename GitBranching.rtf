{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\info
{\author Jourden Lloyd}}\margl1440\margr1440\vieww15300\viewh8020\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 Commands and branching process:\
\

\fs28 //Since \'93-\'93 and \'93:\'94 are sometimes used in commands, I will be separating keywords from their definitions by \'93|\'94\
//Here is the link to the tutorial I followed to learn how to make a branch\
{\field{\*\fldinst{HYPERLINK "https://git-scm.com/book/en/v2/Git-Branching-Branches-in-a-Nutshell"}}{\fldrslt https://git-scm.com/book/en/v2/Git-Branching-Branches-in-a-Nutshell}} \
//Content in () indicates your input, not command keywords\
\

\f1\b git branch (branch name) |
\f0\b0  creates a new branch\
\

\f1\b git log --oneline --decorate | 
\f0\b0 this is how you can check that your branch is being created and see where your git head is pointing\
\

\f1\b git checkout (branch name) | 
\f0\b0 this is how to switch to the new branch\
\
//The tutorial I followed always adds a text file to the new branch before committing it\
//info.txt is an example filename, but it couldn\'92t hurt to have an info file in each branch\

\f1\b \
vim info.txt | 
\f0\b0 this creates a text file in the new branch\
//add a sentence about the purpose for the branch, so it\'92s not an empty file\
\

\f1\b git add . | 
\f0\b0 this will add your changes to the new branch\
\

\f1\b git commit -a -m \'91(commit message)\'92 | 
\f0\b0 this will commit the new changes to the new branch\
\
}